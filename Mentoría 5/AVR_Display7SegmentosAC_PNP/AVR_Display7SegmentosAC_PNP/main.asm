;-------------------------
;DETALLES DEL PROYECTO
	; Display de 7 segmentos Ánodo Común : Se activan los segmentos con "0" 
	; Transistores PNP: Se activan los dígitos con "0"
;-------------------------

.include<m328pdef.inc>

.CSEG
;-------------------------
;DIRECCIONES
;-------------------------
.ORG 0
	JMP RESET
.ORG 0X0002
	JMP INT0_IRQ
.ORG 0X0004
	JMP INT1_IRQ

.ORG 0x100 ;Inicio de código de programa
;-----------------------
;DEFINICION DE VARIABLES
;-----------------------

.DEF CONT=r17          ;Estado de cuenta
.DEF TEMP=r16		
.DEF UNIDADES=r18
.DEF DECENAS=r19
.DEF NUMERO=r20
.DEF SALIDA=r21
.DEF SIGNO=R22
.DEF SWITCHS=R23
.DEF MOSTRAR=R24

;-----------------------------
;RESET Y CONFIGURACIÓN INICIAL
;-----------------------------
RESET:
	;-------------------------------
	;CONFIGURACIÓN DEL STACK POINTER
	;-------------------------------
	clr TEMP
	LDI TEMP, low(ramend)    
	out SPL, TEMP
	LDI TEMP, high(ramend)
	out SPH, TEMP

	;----------------------------------------------------------
	;CONFIGURACIÓN DE ENTRADA DE DATOS (SWITCHES)
	;----------------------------------------------------------
	LDI TEMP, 0b00000000 ;PORTC (PC3:PC0) INPUT PULL DOWN EXTERNO
	OUT DDRC, TEMP
	;----------------------------------------------------------
	;CONFIGURACIÓN DE ENTRADAS DE CONTROL (INTERRUPCIONES) 
	;----------------------------------------------------------
	CBI DDRD, 2  ; PD2 como input para INT0
	CBI PORTD, 2 ; PD2 como pull down externo (adecuado para flanco de bajada)

	CBI DDRD, 3  ; PD3 como input para INT1
	SBI PORTD, 3 ; PD3 como pull up interno (adecuado para flanco de subida)

	; Configuracion de interrupcion
	LDI TEMP, (1<<ISC11)|(1<<ISC10)|(1<<ISC01)|(0<<ISC00)  ;INT0 CON FLANCO DE BAJADA Y INT1 CON FLANCO DE SUBIDA
	STS EICRA,TEMP

	LDI TEMP, (1<<INT1)|(1<<INT0)                          ;ACTIVACIÓN DE INT0 e INT1
	OUT EIMSK, TEMP

	SEI                                                    ;HABILITADOR DE INTERRUPCIÓN GLOBAL

	;----------------------------------------------------------
	;CONFIGURACIÓN DE SALIDA DE DATOS (7 SEGMENTOS + PUNTO)
	;----------------------------------------------------------
	SBI DDRD, 7 ; PD7 -> DP
	SBI DDRD, 6 ; PD6 -> A
	SBI DDRD, 5 ; PD5 -> B
	SBI DDRD, 4 ; PD4 -> C
	SBI DDRB, 3 ; PB3 -> D
	SBI DDRB, 2 ; PB2 -> E
	SBI DDRD, 1 ; PD1 -> F
	SBI DDRD, 0 ; PD0 -> G

	;----------------------------------------------------------
	;CONFIGURACIÓN DE SALIDA DE CONTROL (ACTIVACIÓN DE DÍGITOS)
	;----------------------------------------------------------
	SBI DDRB, 5 ;PB5 -> Control del dígito Millar
	SBI DDRB, 4 ;PB4 -> Control del dígito Centena
	SBI DDRB, 1 ;PB1 -> Control del dígito Decena
	SBI DDRB, 0 ;PB0 -> Control del dígito Unidad

	;----------------------------------------------------------
	;CONFIGURACIÓN DE SALIDA DE TIPO BANDERA 
	;----------------------------------------------------------
	SBI DDRC, 4 ; PC4 -> LED6
	SBI DDRC, 5 ; PC5 -> LED7

	;----------------------------------------------------------
	;INICIALIZACIÓN DE VARIABLES
	;----------------------------------------------------------
	CLR CONT  ;CUENTA EN CERO (MODIFICABLE POR SWITCHES, INT0 e INT1)

;MAIN
LOOP:
  
  CPI CONT, 0
  BRNE BUCLE
  SBI PORTC, 4 ;PRENDER LED6
  SBI PORTC, 5 ;PRENDER LED7
  RJMP LOOP_NORMAL

  BUCLE:
  CBI PORTC, 4 ;APAGAR LED 6
  CBI PORTC, 5 ;APAGAR LED 7
  
  LOOP_NORMAL:
  CALL DEC2BCD 

  ;VALOR DE SIGNO NEGATIVO EN 7 SEGMENTOS
  
  CPI SIGNO, 1
  BREQ NEGATIVO
  RJMP POSITIVO

  NEGATIVO:
  LDI SALIDA, 0b11111110 ;NUMERO NEGATIVO EN ÁNODO COMÚN (SE ACTIVA CON 0)
  LDI MOSTRAR, 0b00001100 
  AND MOSTRAR, SALIDA 
  OUT PORTB, MOSTRAR
  LDI MOSTRAR, 0b11110011
  AND MOSTRAR, SALIDA
  OUT PORTD, MOSTRAR
  SBI PORTB, 5 ;Desactivar MILLAR con "1" (PNP)
  CBI PORTB, 4 ;Activar CENTENA con "0" (PNP)
  SBI PORTB, 1 ;Desactivar DECENA con "1" (PNP)
  SBI PORTB, 0 ;Desactivar UNIDAD con "1" (PNP)
 
  CALL TIM_5
  RJMP NORMAL

  POSITIVO:
  ;0b10000001 ;NUMERO ZERO en ánodo común 
	SBI PORTD, 7;DP ->1
	CBI PORTD, 6;A
	CBI PORTD, 5;B
	CBI PORTD, 4;C
	CBI PORTB, 3;D
	CBI PORTB, 2;E
	CBI PORTD, 1;F
	SBI PORTD, 0;G ->1

  CBI PORTB, 5 ;Activar MILLAR con "1" (PNP)
  CBI PORTB, 4 ;Activar CENTENA con "1" (PNP)
  SBI PORTB, 1 ;Desactivar DECENA con "1" (PNP)
  SBI PORTB, 0 ;Desactivar UNIDAD con "1" (PNP)
 
  CALL TIM_5
 
  NORMAL:
  ;VALOR DE DECENA EN 7 SEGMENTOS
  CLR NUMERO
  MOV NUMERO, DECENAS
  RCALL DEC2DISPLAY
  SBI PORTB, 5  ;Desactivar MILLAR con "1" (PNP)
  SBI PORTB, 4  ;Desactivar CENTENA con "1" (PNP)
  CBI PORTB, 1	;Activar DECENA con "0" (PNP)
  SBI PORTB, 0  ;Desactivar UNIDAD con "1" (PNP)
  
  CALL TIM_5

  ;VALOR DE UNIDAD EN 7 SEGMENTOS
  CLR NUMERO
  MOV NUMERO, UNIDADES
  RCALL DEC2DISPLAY
  SBI PORTB, 5  ;Desactivar MILLAR con "1" (PNP)
  SBI PORTB, 4  ;Desactivar CENTENA con "1" (PNP)
  SBI PORTB, 1	;Desactivar DECENA con "1" (PNP)
  CBI PORTB, 0  ;Activar UNIDAD con "0" (PNP)

  CALL TIM_5

RJMP LOOP

;SUBRUTINA DE CONVERSION////
DEC2BCD:
	MOV UNIDADES, CONT
	CLR DECENAS

DECI:
	CPI UNIDADES, 10
	BRLO UNI
	SUBI UNIDADES, 10
    INC DECENAS
	RJMP DECI
UNI:
	RET
;SUBRUTINA DE CONVERSION////

DEC2DISPLAY:

	;NUMERO 0
	CPI NUMERO, 0
	BREQ SALIDA_0

	;NUMERO 1
	CPI NUMERO, 1 
	BREQ SALIDA_1

	;NUMERO 2
	CPI NUMERO, 2
	BREQ SALIDA_2

	;NUMERO 3
	CPI NUMERO, 3 
	BREQ SALIDA_3

	;NUMERO 4
	CPI NUMERO, 4 
	BREQ SALIDA_4

	;NUMERO 5
	CPI NUMERO, 5 
	BREQ SALIDA_5

	;NUMERO 6
	CPI NUMERO, 6 
	BREQ SALIDA_6

	;NUMERO 7
	CPI NUMERO, 7 
	BREQ SALIDA_7

	;NUMERO 8
	CPI NUMERO, 8 
	BREQ SALIDA_8

	;ANODO COMUN
	;SALIDA_9:
	LDI SALIDA,  0x84  
	RJMP FIN_BIN2BCD


	SALIDA_0:
	LDI SALIDA, 0x81 
	RJMP FIN_BIN2BCD

	SALIDA_1:
	LDI SALIDA, 0XCF
	RJMP FIN_BIN2BCD

    SALIDA_2:
	LDI SALIDA, 0x92
	RJMP FIN_BIN2BCD

	SALIDA_3:
	LDI SALIDA,  0x86  
	RJMP FIN_BIN2BCD

	SALIDA_4:
	LDI SALIDA, 0xCC
	RJMP FIN_BIN2BCD

	SALIDA_5:
	LDI SALIDA,  0xA4
	RJMP FIN_BIN2BCD

	SALIDA_6:
	LDI SALIDA,   0xA0
	RJMP FIN_BIN2BCD

	SALIDA_7:
	LDI SALIDA, 0x8F
	RJMP FIN_BIN2BCD

	SALIDA_8:
	LDI SALIDA, 0x80
	RJMP FIN_BIN2BCD

	
	

	FIN_BIN2BCD:
	LDI MOSTRAR, 0b00001100  ;MOSTRA PB3->D Y PB2 -> E
	AND MOSTRAR, SALIDA      ;MOSTRA PB3->D Y PB2 -> E
	OUT PORTB, MOSTRAR       ;MOSTRA PB3->D Y PB2 -> E

	LDI MOSTRAR, 0b11110011  ;MOSTRAR PD7->DP, PD6->A, PD5->B, PD4->C,PD1->F, PD0->G
	AND MOSTRAR, SALIDA      ;MOSTRAR PD7->DP, PD6->A, PD5->B, PD4->C,PD1->F, PD0->G
	OUT PORTD, MOSTRAR       ;MOSTRAR PD7->DP, PD6->A, PD5->B, PD4->C,PD1->F, PD0->G

	RET


; DELAY////
TIM_5:
	
	LDI R25, 2
    L1: 
	LDI R26, 20
	L2:
	LDI R27, 40
	L3:
	NOP
	NOP
	DEC R27
	BRNE L3
	DEC R26
	BRNE L2
	DEC R25
	BRNE L1

ret

INT0_IRQ:
	PUSH r16
	IN r16, SREG
	PUSH r16

	;SE ACUMULA EL VALOR DE SWITCHS
    IN SWITCHS, PINC
	ANDI SWITCHS, 0X0F
	


	;COMPARA SI ES NEGATIVO 
	EVALUA_SIGNO:
    CPI SIGNO, 1
	BREQ INC_CUENTA_NEG
	
	INC_CUENTA:
	;SUMA
	ADD CONT, SWITCHS
	;INC CONT
	RJMP INT0_END
	 
	INC_CUENTA_NEG:
	;SUMA_NEGATIVA
	SUB CONT, SWITCHS
	BRSH RESTA_CHICA
	RJMP RESTA_GRANDE
	;DEC CONT
	RESTA_CHICA: ;CONT >= SWITCHS
	CPI CONT, 0
	BREQ ZERO
	RJMP INT0_END
	ZERO:
	CLR SIGNO
	RJMP INT0_END

	RESTA_GRANDE: ;SWITCHS > CONT
	NEG CONT
	CLR SIGNO
	RJMP INT0_END
INT0_END:
	POP R16
	OUT SREG, r16
	POP r16
	RETI



INT1_IRQ:
    PUSH r16
	IN r16, SREG
	PUSH r16

;SI ES EL LIMITED E 99
	CPI CONT, 99
	BRLO VALOR
	LDI CONT, 99
	RJMP INT0_END


VALOR:
;SE ACUMULA EL VALOR DE SWITCHS
    IN SWITCHS, PINC
	ANDI SWITCHS, 0X0F

;SE VERIFICA EL SIGNO
   CPI SIGNO, 1
   BREQ CONVERSION
   CPI CONT, 0
   BRLT CONVERSION ;SE COMPARA QUE SEA MENOR DE 0
   RJMP DEC_CUENTA ;SI EL NUMERO ES POSITIVO

CONVERSION:
   NEG CONT

DEC_CUENTA:
    ;RESTA
    ;DEC CONT
	SUB CONT, SWITCHS
	BRMI COMPARACION  ; SE COMPARA SI ES NEGATIVO
    CLR SIGNO

COMPARACION:
	CPI CONT, 0
	BRLT SIGNO_NEGATIVO ;SE COMPARA QUE SEA MENOR DE 0
    RJMP INT1_END ;SI EL NUMERO ES POSITIVO

SIGNO_NEGATIVO:
    NEG CONT
	LDI SIGNO, 1
 
  
INT1_END:
	POP R16
	OUT SREG, r16
	POP r16
	RETI



